/// Grid system
//
// Generate semantic grid columns with these mixins.

@mixin make-grid-gutter($features, $ratio: 1, $gutter: $grid-gutter) {
  @if (type-of($gutter) == "map") {
    @each $breakpoint, $value in $gutter {
      @include media-breakpoint-up($breakpoint, $grid-breakpoints) {
        @each $feature in $features {
          #{$feature}: ceil($value * $ratio);
        }
      }
    }
  } @else {
    @each $feature in $features {
      #{$feature}: ceil($gutter * $ratio);
    }
  }
}

@mixin make-row($class: ".row", $gutter: $grid-gutter) {

  #{$class} {
    @include make-grid-gutter((margin-left, margin-right), -1);

    display: flex;
    flex: 1 0 100%;
    flex-wrap: wrap;

    @if $enable-small-grid {
      &--small {
        @include make-grid-gutter((margin-left, margin-right), -0.5);
      }
    }
  }
}

@mixin make-col($size, $columns: $grid-columns) {
  width: percentage($size / $columns);
  flex: 0 0 auto;
}

@mixin make-col-auto() {
  width: auto;
  flex: 0 0 auto;
}

@mixin make-col-offset($size, $columns: $grid-columns) {
  $num: $size / $columns;

  margin-left: if($num == 0, 0, percentage($num));
}

// Framework grid generation

@mixin make-grid-columns($class: ".col", $columns: $grid-columns, $breakpoints: $grid-breakpoints) {

  #{$class} {
    @include make-grid-gutter((padding-left, padding-right));

    width: 100%;
    max-width: 100%;
    flex-shrink: 0;

    @if $enable-small-grid {
      &--small {
        @include make-grid-gutter((padding-left, padding-right) ,0.5);
      }
    }
  }

  @each $breakpoint in map-keys($breakpoints) {
    $infix: breakpoint-infix($breakpoint, $breakpoints);

    // stylelint-disable-next-line
    @include media-breakpoint-up($breakpoint, $breakpoints) {

      #{$class}-#{$infix}-auto {
        @include make-col-auto();
      }

      @if $columns > 0 {
        @for $i from 1 through $columns {
          #{$class}-#{$infix}-#{$i} {
            @include make-col($i, $columns);
          }
        }
      }
    }
  }
}
